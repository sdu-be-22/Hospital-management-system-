<script>
  
// store.html
const toggleButton = document.getElementsByClassName('toggle-button')[0]
	const navbarLinks = document.getElementsByClassName('navbar-links')[0]

	toggleButton.addEventListener('click', () => {
	navbarLinks.classList.toggle('active')
	})

	function myFunction(){

	}

// checkout.html
var form = document.getElementById('form')
form.addEventListener('submit', function(e){
  e.preventDefault()
  console.log('Form submitted..')
  document.getElementById('form-button').classList.add('hidden')
  document.getElementById('payment-info').classList.remove('hidden')
})



// store

	// console.log('Hello world')

var updateBtns = document.getElementsByClassName('update-cart')

for(var i = 0; i < updateBtns.length; i++){
  updateBtns[i].addEventListener('click', function(){
    var productId = this.dataset.product
    var action  = this.dataset.action
    console.log('productId', productId, 'action', action )
    console.log('USER:', user)
    if(user === 'AnonymousUser'){
      console.log('User is not authenticated')
    } else {
      updateUserOrder(productId, action)
    }
  })
}

  function updateUserOrder(productId, action){
    console.log('User is logged in, sending data...')
    var url = '/update_item/'
    fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRFToken' : csrftoken,
      },
      body:JSON.stringify({'productId': productId, 'action': action}) 
    })
    .then((response) => {
      return response.json();
    })
    .then((data) => {
      console.log('data:', data)
      location.reload()
    });
  }
</script>





<script type="text/javascript">
      
      var user = '{{ request.user }}'
      function getToken(name) {
        var cookieValue = null;
        if (document.cookie && document.cookie !== '') {
            var cookies = document.cookie.split(';');
            for (var i = 0; i < cookies.length; i++) {
                var cookie = cookies[i].trim();
                // Does this cookie string begin with the name we want?
                if (cookie.substring(0, name.length + 1) === (name + '=')) {
                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                    break;
                }
            }
        }
        return cookieValue;
    }
    var csrftoken = getToken('csrftoken');
    </script>







	
// store.html
const toggleButton = document.getElementsByClassName('toggle-button')[0]
	const navbarLinks = document.getElementsByClassName('navbar-links')[0]

	toggleButton.addEventListener('click', () => {
	navbarLinks.classList.toggle('active')
	})

	function myFunction(){

	}

// checkout.html
var form = document.getElementById('form')
form.addEventListener('submit', function(e){
  e.preventDefault()
  console.log('Form submitted..')
  document.getElementById('form-button').classList.add('hidden')
  document.getElementById('payment-info').classList.remove('hidden')
})



// store

	// console.log('Hello world')

var updateBtns = document.getElementsByClassName('update-cart')

for(var i = 0; i < updateBtns.length; i++){
  updateBtns[i].addEventListener('click', function(){
    var productId = this.dataset.product
    var action  = this.dataset.action
    console.log('productId', productId, 'action', action )
    console.log('USER:', user)
    if(user === 'AnonymousUser'){
      console.log('User is not authenticated')
    } else {
      updateUserOrder(productId, action)
    }
  })
}

  function updateUserOrder(productId, action){
    console.log('User is logged in, sending data...')
    var url = '/update_item/'
    fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRFToken' : csrftoken,
      },
      body:JSON.stringify({'productId': productId, 'action': action}) 
    })
    .then((response) => {
      return response.json();
    })
    .then((data) => {
      console.log('data:', data)
      location.reload()
    });
  }



  def updateItem(request):
     data = json.loads(request.body)
     data = json.loads(request.data)
     productId = data['productId']
     action = data['action']
     print('Action:', action)
     print('productId:', productId)

     customer = request.user.customer
     product = Product.objects.get(id=productId)
     order, created = Order.objects.get_or_create(customer=customer, complete=False)
     orderItem, created = OrderItem.objects.get_or_create(order=order, product=product)
     
     if action == 'add':
          orderItem.quantity = (orderItem.quantity + 1)
     elif action == 'remove':
          orderItem.quantity = (orderItem.quantity - 1)

     orderItem.save()

     if orderItem.quantity <= 0:
          orderItem.delete()
     
     orderItem.save()

     return JsonResponse('Item was added', safe=False)